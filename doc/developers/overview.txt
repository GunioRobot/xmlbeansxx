This file describes important parts of architecture of xmlbeansxx 
and is destined to developers of xmlbeansxx.
It also shows current status of development of xmlbeansxx.


1. General Architecture Overview.
xmlbeansxx uses xerces-c to parse XML documents and to validate agaist XML schema. 
They do not contain their own validator by now in order to keep implementation simple.

xmlbeansxx create internal representation of XML, which can be accessed through 
class Contents. Contents provide synchronized access to subelements 
and subattributes of any XmlObject. 
Contents use AttrDict and ElemDict to do various operations
on subattributes and subelements of XmlObject. 
In order to modify internal storage, it is only needed to modify
ElemDict and AttrDict. 
By now internal storage uses StoreString class, which provides
string operations with low memory usage. See StoreString for
more informations. 
By now, Contents do not support subelements or subattributes
of other namespace that this from current XmlObject. 
It is one of things TODO.

xmlbeansxx use static initialization to register all generated 
classes in globalTypeSystem. globalTypeSystem is then
used during parsing of XML documents to create XmlObjects 
of correct type.
It is assumed that there is no access to xmlbeansxx during static
initialization of application (due to static initialization fiasco problem).
Although there is quite simple workaround for this problem 
(it is only needed to invoke constructor of TypesExistence class
from each file generated from xsd). But it is not implemented,
because it was not needed.

xmlbeansxx remember all XML string data in UTF-8 format (eg. simple content
of some XmlObject).

xmlbeansxx use java_cast template to convert between various shared_pointers.
See macros.h for more information.

2. XPath evaluation through query method on XmlObject. 
Current implementation is at beginning stage. 
A method query takes QueryNode element, which is 
parsed tree representation of XPath. 
First thing to do is a parser, which converts an xpath
from string to this representation. 
Second thing to do is to implement returning 
array of XmlObjects. 

Second possible way to implement this functionality (which, I think 
is more promising), is to implement something like asDomNode method
in XmlObject, and implement query method using some already implemented 
XPath evaluator. This would decrase code redundancy and also would keep
code simple.

3. Constructors and operators in <GeneratedClassName>.
Constructors in <GeneratedClassName> are deprecated. 
However currently they are used instead of creating <GeneratedClassName>Impl classes.
This is a TODO item.
There are also some XmlObject subclasses in which some operators are implemented. 
They are deprecated.

4. Xml Cursors are not implemented. 
