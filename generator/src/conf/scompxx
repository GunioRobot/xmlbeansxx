#!/bin/bash

#
#    Copyright 2004-2005 TouK s.c.
#    
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

#set -x

usage="\
Generates C++ library from xsd files.

Usage: $0 [-out lib_name] [-V lib_version] [dirs]* [files.xsd]*

-out lib_name	- Library name
-V lib_version	- Library version

files.xsd	- Type system schema files
dirs		- directores with type system schema files (search recursively)

example:
$0 -out libmylibrary -V 2:1:3 file.xsd

Report bugs to: <rr@touk.pl>
Copyright (C) 2004 TouK"

if test $# -eq 0; then
  echo "$usage"; exit 1
fi

basefile=`readlink -f $0`
BIN=`dirname $basefile`

ARG_XSD=""
SRC_DIR="src"
XSD_PATH_PREFIX="../"
LIB_NAME="libxmltypes"
LIB_VERSION="1:0:0"
DIRS=""

while test $# -gt 0; do
	case "$1" in
	-out)	shift
		LIB_NAME="$1"
		;;
	-V)	shift
		LIB_VERSION="$1"
		;;
	-*)	echo "$usage" ; exit 1
		;;
	*.xsd)	ARG_XSD="$ARG_XSD $1"
		;;
	*)	DIRS="$DIRS $1"
		;;
	esac
	shift
done


for i in $DIRS; do
	 ARG_XSD="$ARG_XSD `find $i -name \*.xsd`"
done


for i in $ARG_XSD; do
	case "$i" in
	/*)	XSD_FILES="$XSD_FILES $i"
		;;
	*)	XSD_FILES="$XSD_FILES $XSD_PATH_PREFIX$i"
		;;
	esac
done 

mkdir $SRC_DIR
cd $SRC_DIR

rm -f xsd.txt
if ! $BIN/xmlbeansxx-gen -Dincludes=xsd.txt $XSD_FILES; then exit 1; fi

COMP_XSD=`cat xsd.txt`
COMP_XSD=`echo $COMP_XSD`

for i in $COMP_XSD; do
    COMP_H="$COMP_H `basename $i .xsd`.h"
    COMP_CPP="$COMP_CPP `basename $i .xsd`.cpp"
done


#############################

cat <<EOF >Makefile.am
ACLOCAL = aclocal -I m4

COMP_XSD=$COMP_XSD
COMP_H=$COMP_H
COMP_CPP=$COMP_CPP

include_HEADERS = \$(COMP_H)

lib_LTLIBRARIES = ${LIB_NAME}.la
${LIB_NAME}_la_LDFLAGS = -version-info $LIB_VERSION -lxmlbeansxx
${LIB_NAME}_la_SOURCES = \$(COMP_H) \$(COMP_CPP)

\$(COMP_H) \$(COMP_CPP): $XSD_FILES
	$BIN/xmlbeansxx-gen $XSD_FILES

MOSTLYCLEANFILES = \$(COMP_H) \$(COMP_CPP)

EOF

cd ..

cat <<EOF >Makefile.am

ACLOCAL = aclocal -I m4
EXTRA_DIST = bootstrap m4/acx_pthread.m4
SUBDIRS = src


EOF


## Creating default make files

if ! [ -e m4/acx_pthread.m4 ]; then
	if ! [ -e m4 ]; then mkdir m4 ; fi
    cp $BIN/acx_pthread.m4 m4
fi

if ! [ -e configure.ac ]; then

cat <<EOF >configure.ac
AC_PREREQ(2.57)

AC_INIT(XMLTYPES, 0.0, support@TouK.pl)
# When changing version number make sure to change version-info argument in i
#   Makefile.am 
# according to libtool documentation

AC_CONFIG_AUX_DIR([config])
#AC_CONFIG_MACRO_DIR([m4])

AC_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE([1.7])

AC_PROG_CC
AC_PROG_CXX
AC_LANG(C++)

AC_DISABLE_STATIC
AC_LIB_LTDL
AC_LIBLTDL_CONVENIENCE
AC_SUBST(LTDLINCL)
AC_SUBST(LIBLTDL)
AC_LIBTOOL_DLOPEN
AC_PROG_LIBTOOL

ACX_PTHREAD([
		LIBS="\$PTHREAD_LIBS \$LIBS"
		CPPFLAGS="\$CPPFLAGS \$PTHREAD_CFLAGS"
		CC="\$PTHREAD_CC"
	],[
		AC_MSG_WARN([Compiling without thread support])
	])

CXXFLAGS="-O0"

AC_CHECK_HEADERS([boost/smart_ptr.hpp boost/any.hpp], , AC_MSG_ERROR([boost library is required]))

AC_SUBST(ac_aux_dir)

AC_CONFIG_FILES([Makefile $SRC_DIR/Makefile])

AC_OUTPUT
EOF
RUN_CONFIGURE=1
fi

if ! [ -e bootstrap ]; then
    cat <<EOF >bootstrap
#!/bin/sh
set -x
mkdir -p config m4 && aclocal -I m4 && autoheader && libtoolize --automake --copy && automake --foreign --add-missing --copy && autoconf
EOF
chmod +x bootstrap
RUN_BOOTSTRAP=1
fi

## Launching makefiles generation ##
if [ "$RUN_BOOTSTRAP" = 1 ]; then ./bootstrap || exit 1; fi
if [ "$RUN_CONFIGURE" = 1 ]; then ./configure || exit 1; fi

## Compilation ##
make && cat <<EOF
###########################################
# Type:
# make install
# in order to install library into system
###########################################
EOF

